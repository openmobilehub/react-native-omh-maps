name: Publish NPM packages

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Publish NPM packages
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: 'main'
          token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Enable corepack
        run: corepack enable

      - name: Cache JS dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install JS dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --immutable
        shell: bash

      - name: Build packages
        run: yarn build:packages

      - name: 'Setup git user'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "openmobilehub@users.noreply.github.com"

      - name: 'Setup NPM token'
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 'Check if version changed'
        run: |
          bash ./.github/scripts/check-version.sh

      - name: 'Create new tag'
        if: env.version_changed == 'true'
        run: |
          git tag v${{ env.PACKAGE_VERSION }}
          git push origin v${{ env.PACKAGE_VERSION }}

      - name: 'Publish packages'
        if: env.version_changed == 'true'
        run: |
          npx lerna publish from-package --no-changelog --yes
